# this is an auto generated file. This will be overwritten
query SyncUsers(
  $filter: ModelUserFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncUsers(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      userSub
      name
      email
      phone
      warningSigns {
        nextToken
        startedAt
      }
      copingStrategies {
        nextToken
        startedAt
      }
      contacts {
        nextToken
        startedAt
      }
      places {
        nextToken
        startedAt
      }
      favouriteResources {
        nextToken
        startedAt
      }
      _version
      _deleted
      _lastChangedAt
      createdAt
      updatedAt
    }
    nextToken
    startedAt
  }
}
query GetUser($id: ID!) {
  getUser(id: $id) {
    id
    userSub
    name
    email
    phone
    warningSigns {
      items {
        id
        userID
        title
        description
        _version
        _deleted
        _lastChangedAt
        createdAt
        updatedAt
      }
      nextToken
      startedAt
    }
    copingStrategies {
      items {
        id
        userID
        title
        description
        _version
        _deleted
        _lastChangedAt
        createdAt
        updatedAt
      }
      nextToken
      startedAt
    }
    contacts {
      items {
        id
        userID
        name
        automaticTextMessage
        phone
        _version
        _deleted
        _lastChangedAt
        createdAt
        updatedAt
      }
      nextToken
      startedAt
    }
    places {
      items {
        id
        userID
        title
        description
        _version
        _deleted
        _lastChangedAt
        createdAt
        updatedAt
      }
      nextToken
      startedAt
    }
    favouriteResources {
      items {
        id
        resourceID
        userID
        order
        _version
        _deleted
        _lastChangedAt
        createdAt
        updatedAt
      }
      nextToken
      startedAt
    }
    _version
    _deleted
    _lastChangedAt
    createdAt
    updatedAt
  }
}
query ListUsers(
  $filter: ModelUserFilterInput
  $limit: Int
  $nextToken: String
) {
  listUsers(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      userSub
      name
      email
      phone
      warningSigns {
        nextToken
        startedAt
      }
      copingStrategies {
        nextToken
        startedAt
      }
      contacts {
        nextToken
        startedAt
      }
      places {
        nextToken
        startedAt
      }
      favouriteResources {
        nextToken
        startedAt
      }
      _version
      _deleted
      _lastChangedAt
      createdAt
      updatedAt
    }
    nextToken
    startedAt
  }
}
query SyncWarningSigns(
  $filter: ModelWarningSignFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncWarningSigns(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      userID
      title
      description
      _version
      _deleted
      _lastChangedAt
      createdAt
      updatedAt
    }
    nextToken
    startedAt
  }
}
query GetWarningSign($id: ID!) {
  getWarningSign(id: $id) {
    id
    userID
    title
    description
    _version
    _deleted
    _lastChangedAt
    createdAt
    updatedAt
  }
}
query ListWarningSigns(
  $filter: ModelWarningSignFilterInput
  $limit: Int
  $nextToken: String
) {
  listWarningSigns(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      userID
      title
      description
      _version
      _deleted
      _lastChangedAt
      createdAt
      updatedAt
    }
    nextToken
    startedAt
  }
}
query SyncCopingStrategies(
  $filter: ModelCopingStrategyFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncCopingStrategies(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      userID
      title
      description
      _version
      _deleted
      _lastChangedAt
      createdAt
      updatedAt
    }
    nextToken
    startedAt
  }
}
query GetCopingStrategy($id: ID!) {
  getCopingStrategy(id: $id) {
    id
    userID
    title
    description
    _version
    _deleted
    _lastChangedAt
    createdAt
    updatedAt
  }
}
query ListCopingStrategys(
  $filter: ModelCopingStrategyFilterInput
  $limit: Int
  $nextToken: String
) {
  listCopingStrategys(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      userID
      title
      description
      _version
      _deleted
      _lastChangedAt
      createdAt
      updatedAt
    }
    nextToken
    startedAt
  }
}
query SyncContacts(
  $filter: ModelContactFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncContacts(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      userID
      name
      automaticTextMessage
      phone
      _version
      _deleted
      _lastChangedAt
      createdAt
      updatedAt
    }
    nextToken
    startedAt
  }
}
query GetContact($id: ID!) {
  getContact(id: $id) {
    id
    userID
    name
    automaticTextMessage
    phone
    _version
    _deleted
    _lastChangedAt
    createdAt
    updatedAt
  }
}
query ListContacts(
  $filter: ModelContactFilterInput
  $limit: Int
  $nextToken: String
) {
  listContacts(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      userID
      name
      automaticTextMessage
      phone
      _version
      _deleted
      _lastChangedAt
      createdAt
      updatedAt
    }
    nextToken
    startedAt
  }
}
query SyncPlaces(
  $filter: ModelPlaceFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncPlaces(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      userID
      title
      description
      address {
        street
        city
        postalCode
        province
        country
      }
      _version
      _deleted
      _lastChangedAt
      createdAt
      updatedAt
    }
    nextToken
    startedAt
  }
}
query GetPlace($id: ID!) {
  getPlace(id: $id) {
    id
    userID
    title
    description
    address {
      street
      city
      postalCode
      province
      country
    }
    _version
    _deleted
    _lastChangedAt
    createdAt
    updatedAt
  }
}
query ListPlaces(
  $filter: ModelPlaceFilterInput
  $limit: Int
  $nextToken: String
) {
  listPlaces(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      userID
      title
      description
      address {
        street
        city
        postalCode
        province
        country
      }
      _version
      _deleted
      _lastChangedAt
      createdAt
      updatedAt
    }
    nextToken
    startedAt
  }
}
query SyncFavouriteUserResources(
  $filter: ModelFavouriteUserResourcesFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncFavouriteUserResources(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      resourceID
      userID
      order
      resource {
        id
        title
        description
        live_chat
        img_url
        url
        _version
        _deleted
        _lastChangedAt
        createdAt
        updatedAt
      }
      user {
        id
        userSub
        name
        email
        phone
        _version
        _deleted
        _lastChangedAt
        createdAt
        updatedAt
      }
      _version
      _deleted
      _lastChangedAt
      createdAt
      updatedAt
    }
    nextToken
    startedAt
  }
}
query GetFavouriteUserResources($id: ID!) {
  getFavouriteUserResources(id: $id) {
    id
    resourceID
    userID
    order
    resource {
      id
      title
      description
      phone {
        number
        hoursOfOperation
      }
      sms {
        number
        hoursOfOperation
      }
      live_chat
      img_url
      url
      userFavourites {
        nextToken
        startedAt
      }
      _version
      _deleted
      _lastChangedAt
      createdAt
      updatedAt
    }
    user {
      id
      userSub
      name
      email
      phone
      warningSigns {
        nextToken
        startedAt
      }
      copingStrategies {
        nextToken
        startedAt
      }
      contacts {
        nextToken
        startedAt
      }
      places {
        nextToken
        startedAt
      }
      favouriteResources {
        nextToken
        startedAt
      }
      _version
      _deleted
      _lastChangedAt
      createdAt
      updatedAt
    }
    _version
    _deleted
    _lastChangedAt
    createdAt
    updatedAt
  }
}
query ListFavouriteUserResourcess(
  $filter: ModelFavouriteUserResourcesFilterInput
  $limit: Int
  $nextToken: String
) {
  listFavouriteUserResourcess(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      resourceID
      userID
      order
      resource {
        id
        title
        description
        live_chat
        img_url
        url
        _version
        _deleted
        _lastChangedAt
        createdAt
        updatedAt
      }
      user {
        id
        userSub
        name
        email
        phone
        _version
        _deleted
        _lastChangedAt
        createdAt
        updatedAt
      }
      _version
      _deleted
      _lastChangedAt
      createdAt
      updatedAt
    }
    nextToken
    startedAt
  }
}
query SyncHelpResources(
  $filter: ModelHelpResourceFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncHelpResources(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      title
      description
      phone {
        number
        hoursOfOperation
      }
      sms {
        number
        hoursOfOperation
      }
      live_chat
      img_url
      url
      userFavourites {
        nextToken
        startedAt
      }
      _version
      _deleted
      _lastChangedAt
      createdAt
      updatedAt
    }
    nextToken
    startedAt
  }
}
query GetHelpResource($id: ID!) {
  getHelpResource(id: $id) {
    id
    title
    description
    phone {
      number
      hoursOfOperation
    }
    sms {
      number
      hoursOfOperation
    }
    live_chat
    img_url
    url
    userFavourites {
      items {
        id
        resourceID
        userID
        order
        _version
        _deleted
        _lastChangedAt
        createdAt
        updatedAt
      }
      nextToken
      startedAt
    }
    _version
    _deleted
    _lastChangedAt
    createdAt
    updatedAt
  }
}
query ListHelpResources(
  $filter: ModelHelpResourceFilterInput
  $limit: Int
  $nextToken: String
) {
  listHelpResources(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      title
      description
      phone {
        number
        hoursOfOperation
      }
      sms {
        number
        hoursOfOperation
      }
      live_chat
      img_url
      url
      userFavourites {
        nextToken
        startedAt
      }
      _version
      _deleted
      _lastChangedAt
      createdAt
      updatedAt
    }
    nextToken
    startedAt
  }
}
